# Stock Service Configuration
quarkus.http.port=8083
# Quarkus Application Info
quarkus.application.name=stock-service
quarkus.application.version=1.0.0-SNAPSHOT

# Database Configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://postgres.minikube.local:31000/postgres
quarkus.datasource.username=debezium
quarkus.datasource.password=dbz_password
quarkus.hibernate-orm.database.generation=validate
# quarkus.hibernate-orm.log.sql=true # Uncomment for debugging SQL

# Kafka Configuration (Common)
kafka.bootstrap.servers=kafka.minikube.local:31092

# Kafka Consumer Configuration (SmallRye Reactive Messaging)
# Consumer for Order Events (specifically interested in AWAITING_STOCK status)
mp.messaging.incoming.order-events.connector=smallrye-kafka
mp.messaging.incoming.order-events.topic=minikubepg_postgres.public.orders
mp.messaging.incoming.order-events.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.order-events.group.id=stock-service-orders-group
mp.messaging.incoming.order-events.auto.offset.reset=earliest
mp.messaging.incoming.order-events.enable-auto-commit=true
mp.messaging.incoming.order-events.deserialization.failure.strategy=log
# mp.messaging.incoming.order-events.failure-strategy=dead-letter-queue # Consider adding failure handling

# Jackson configuration (optional, if specific settings are needed)
# quarkus.jackson.fail-on-unknown-properties=false
